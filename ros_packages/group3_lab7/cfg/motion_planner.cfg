#!
#! /usr/bin/env python

PACKAGE='group3_lab7'
import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
# Name, Type, Reconfiguration level, Description, Default, Min, Max

algorithm_enum = gen.enum([gen.const("rrt",               int_t, 0, "RRT"),
                           gen.const("rrt_star",          int_t, 1, "RRT*"),
                           gen.const("informed_rrt_star", int_t, 2, "Informed-RRT*")],
                           "Algorithm")

gen.add("algorithm", int_t, 0, "Algorithm", 2, 0, 2, edit_method=algorithm_enum)
gen.add("seed_last_solution", bool_t, 0, "Seed last solution.", True)
gen.add("reward_temporal_coherence", bool_t, 0, "Reward temporal coherence.", True)
gen.add("number_of_random_samples", int_t, 0, "Number of random samples", 4000,   80, 80000)
gen.add("goal_proximity_threshold", int_t, 0, "Goal proximity threshold (units: grid pixels)",    2,    1,    10)
gen.add("size_of_k_neighborhood",   int_t, 0, "Size of k-neighborhood",     30,    2,   100)
gen.add("maximum_branch_expansion", int_t, 0, "Maximum branch expansion (units: grid pixels)",   20,    2,   100)
gen.add("extra_occupancy_grid_dilation", int_t, 0, "Extra occupancy grid dilation (units: grid pixels)",    0,    0,    20)
gen.add("generate_marker_messages", bool_t, 0, "Generate visualization_msgs::Marker messages for RViz.", False)
gen.add("maximum_goal_update_frequency", int_t, 0, "Maximum goal update frequency (units: Hz)",   60,    0,    120)
gen.add("maximum_occupancy_grid_update_frequency", int_t, 0, "Maximum occupancy grid update frequency (units: Hz)",   60,    0,    120)
gen.add("lookahead_distance", double_t, 0, "Lookahead distance.", 1.0, 0.2, 5.0)
gen.add("path_segment_length", double_t, 0, "Re-sampled path segment length.", 0.2, 0.01, 1.0)
exit(gen.generate(PACKAGE, "group3_lab7", "motion_planner_"))