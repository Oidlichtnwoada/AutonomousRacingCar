# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import racecar_simulator_pb2 as racecar__simulator__pb2


class SimulatorStub(object):
    """
    ---------------------------------------------------------------------------------------------------------------------
    Simulator Service
    ---------------------------------------------------------------------------------------------------------------------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListSimulationScenarios = channel.unary_unary(
                '/f1tenth.Simulator/ListSimulationScenarios',
                request_serializer=racecar__simulator__pb2.Empty.SerializeToString,
                response_deserializer=racecar__simulator__pb2.ListSimulationScenariosResponse.FromString,
                )
        self.CreateSimulation = channel.unary_unary(
                '/f1tenth.Simulator/CreateSimulation',
                request_serializer=racecar__simulator__pb2.CreateSimulationRequest.SerializeToString,
                response_deserializer=racecar__simulator__pb2.CreateSimulationResponse.FromString,
                )
        self.DeleteSimulation = channel.unary_unary(
                '/f1tenth.Simulator/DeleteSimulation',
                request_serializer=racecar__simulator__pb2.DeleteSimulationRequest.SerializeToString,
                response_deserializer=racecar__simulator__pb2.DeleteSimulationResponse.FromString,
                )
        self.GetSimulationState = channel.unary_unary(
                '/f1tenth.Simulator/GetSimulationState',
                request_serializer=racecar__simulator__pb2.GetSimulationStateRequest.SerializeToString,
                response_deserializer=racecar__simulator__pb2.GetSimulationStateResponse.FromString,
                )
        self.SimulationStep = channel.unary_unary(
                '/f1tenth.Simulator/SimulationStep',
                request_serializer=racecar__simulator__pb2.SimulationStepRequest.SerializeToString,
                response_deserializer=racecar__simulator__pb2.SimulationStepResponse.FromString,
                )


class SimulatorServicer(object):
    """
    ---------------------------------------------------------------------------------------------------------------------
    Simulator Service
    ---------------------------------------------------------------------------------------------------------------------

    """

    def ListSimulationScenarios(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSimulation(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSimulation(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSimulationState(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SimulationStep(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SimulatorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListSimulationScenarios': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSimulationScenarios,
                    request_deserializer=racecar__simulator__pb2.Empty.FromString,
                    response_serializer=racecar__simulator__pb2.ListSimulationScenariosResponse.SerializeToString,
            ),
            'CreateSimulation': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSimulation,
                    request_deserializer=racecar__simulator__pb2.CreateSimulationRequest.FromString,
                    response_serializer=racecar__simulator__pb2.CreateSimulationResponse.SerializeToString,
            ),
            'DeleteSimulation': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSimulation,
                    request_deserializer=racecar__simulator__pb2.DeleteSimulationRequest.FromString,
                    response_serializer=racecar__simulator__pb2.DeleteSimulationResponse.SerializeToString,
            ),
            'GetSimulationState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSimulationState,
                    request_deserializer=racecar__simulator__pb2.GetSimulationStateRequest.FromString,
                    response_serializer=racecar__simulator__pb2.GetSimulationStateResponse.SerializeToString,
            ),
            'SimulationStep': grpc.unary_unary_rpc_method_handler(
                    servicer.SimulationStep,
                    request_deserializer=racecar__simulator__pb2.SimulationStepRequest.FromString,
                    response_serializer=racecar__simulator__pb2.SimulationStepResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'f1tenth.Simulator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Simulator(object):
    """
    ---------------------------------------------------------------------------------------------------------------------
    Simulator Service
    ---------------------------------------------------------------------------------------------------------------------

    """

    @staticmethod
    def ListSimulationScenarios(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/f1tenth.Simulator/ListSimulationScenarios',
            racecar__simulator__pb2.Empty.SerializeToString,
            racecar__simulator__pb2.ListSimulationScenariosResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSimulation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/f1tenth.Simulator/CreateSimulation',
            racecar__simulator__pb2.CreateSimulationRequest.SerializeToString,
            racecar__simulator__pb2.CreateSimulationResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteSimulation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/f1tenth.Simulator/DeleteSimulation',
            racecar__simulator__pb2.DeleteSimulationRequest.SerializeToString,
            racecar__simulator__pb2.DeleteSimulationResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSimulationState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/f1tenth.Simulator/GetSimulationState',
            racecar__simulator__pb2.GetSimulationStateRequest.SerializeToString,
            racecar__simulator__pb2.GetSimulationStateResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SimulationStep(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/f1tenth.Simulator/SimulationStep',
            racecar__simulator__pb2.SimulationStepRequest.SerializeToString,
            racecar__simulator__pb2.SimulationStepResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
